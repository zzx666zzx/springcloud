eureka.client.serviceUrl.defaultZone=http://localhost:8090/eureka/
server.port=8100
spring.application.name=service-zuul
eureka.instance.prefer-ip-address=true
#当我的访问地址符合/api-feign/**规则的时候，会被自动定位到service-feign服务上去
#zuul.routes后面跟着的是服务名，服务名后面跟着的是路径规则，这种配置方式显然更简单
#以下等同于：
#zuul.routes.api-feign.path=/api-feign/**
#zuul.routes.api-feign.serviceId=service-feign

#统一加访问前缀
#zuul.prefix=/zzx

#映射服务service-feign
zuul.routes.service-feign=/api-feign/**
#映射服务service-ribbon
zuul.routes.service-ribbon=/api-ribbon/**
#如果映射规则我们什么都不写，系统也给我们提供了一套默认的配置规则，默认的配置规则如下：
#zuul.routes.service-feign.path=/service-feign/**
#zuul.routes.service-feign.serviceId=service-feign
#要想屏蔽远程访问的情况使用：屏蔽service-feign和service-ribbon远程调用的service-hi服务，不想屏蔽注释掉就行
zuul.ignored-services=service-hi
#屏蔽某个接口：
zuul.ignored-patterns=/**/zuul/**

#我们在使用Nginx的时候，会涉及到一个请求头信息的配置，防止页面重定向后跳转到上游服务器上去，
#这个问题在Zuul中一样存在，假设我的service-feign中提供了一个接口/hello4，
#当访问/hello4接口的时候，页面重定向到/hello，默认情况下，重定向的地址是具体的服务实例的地址，
#而不是API网关的跳转地址，这种做法会暴露真实的服务地址，所以需要在Zuul中配置，配置方式很简单，如下：
#表示API网关在进行请求路由转发前为请求设置Host头信息。
zuul.add-host-header=true

#默认情况下，敏感的头信息无法经过API网关进行传递，我们可以通过如下配置使之可以传递：
#zuul.routes.service-feign.sensitiveHeaders=敏感头部信息

#如果我们想关闭Hystrix重试机制，可以通过如下方式：
#关闭全局重试机制：
#zuul.retryable=false
#关闭某一个服务的重试机制：
#zuul.routes.service-feign.retryable= false



